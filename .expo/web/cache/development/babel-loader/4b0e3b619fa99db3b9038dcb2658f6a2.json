{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AtLaw012\\\\Desktop\\\\Senior Project\\\\traceapp-wsu\\\\src\\\\screens\\\\LoginScreen.js\";\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var userInfo = {\n    username: 'admin',\n    password: 'pass'\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  _login = function _login() {\n    return _regeneratorRuntime.async(function _login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(userInfo);\n            console.log('name: ' + username);\n            console.log('pass: ' + password);\n\n            if (!(userInfo.username === username && userInfo.password === password)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('isLoggedIn', '1'));\n\n          case 6:\n            navigation.navigate('Profile');\n            _context.next = 10;\n            break;\n\n          case 9:\n            alert('Username or password is incorrect');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  _logout = function _logout() {\n    return _regeneratorRuntime.async(function _logout$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 2:\n            navigation.navigate.Auth;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.backgroundImage,\n    source: require(\"../images/TraceBio-White.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"LOGIN\"), React.createElement(TextInput, {\n    placeholder: \"Username\",\n    style: styles.inputFields,\n    onChangeText: function onChangeText(uname) {\n      return setUsername(uname);\n    },\n    value: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    style: styles.inputFields,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(pass) {\n      return setPassword(pass);\n    },\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: _login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"LOGIN\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#b7b7b7'\n  },\n  backgroundImage: {\n    alignSelf: 'center',\n    marginTop: 30,\n    marginBottom: 70,\n    width: '60%',\n    height: 100,\n    resizeMode: \"stretch\"\n  },\n  inputFields: {\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '10%',\n    marginVertical: 10,\n    padding: 10,\n    fontWeight: 'bold',\n    opacity: .4,\n    borderRadius: 3\n  },\n  title: {\n    alignSelf: 'center',\n    marginHorizontal: '10%',\n    marginVertical: 10,\n    color: '#202020',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  button: {\n    alignItems: 'center',\n    marginHorizontal: '10%',\n    marginVertical: 10,\n    padding: 10,\n    borderRadius: 20,\n    backgroundColor: '#ff0000'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/AtLaw012/Desktop/Senior Project/traceapp-wsu/src/screens/LoginScreen.js"],"names":["React","Component","useState","AsyncStorage","createStackNavigator","LoginScreen","navigation","userInfo","username","password","setUsername","setPassword","_login","console","log","setItem","navigate","alert","_logout","clear","Auth","styles","container","backgroundImage","require","title","inputFields","uname","pass","button","buttonText","StyleSheet","create","flex","backgroundColor","alignSelf","marginTop","marginBottom","width","height","resizeMode","marginHorizontal","marginVertical","padding","fontWeight","opacity","borderRadius","color","fontSize","alignItems"],"mappings":"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","sourcesContent":["import React, { Component, useState }  from 'react';\r\nimport {View, Text, TextInput, StyleSheet, TouchableOpacity, Image} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\n//Create the Login Page\r\nconst LoginScreen =({navigation}) =>{\r\n    //hard coded user information\r\n    const userInfo = {\r\n        username: 'admin',\r\n        password: 'pass'\r\n    };\r\n\r\n    //states \r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    //User login done using AsyncStorage - not secure, information held locally\r\n    _login = async () => {\r\n        console.log(userInfo)\r\n        console.log('name: '+username);\r\n        console.log('pass: '+password);\r\n        if(userInfo.username === username && userInfo.password === password){\r\n           //alert('Logged in!');\r\n           await AsyncStorage.setItem('isLoggedIn','1');\r\n           navigation.navigate('Profile')\r\n        }\r\n        else{\r\n            alert('Username or password is incorrect');\r\n        }\r\n    }\r\n    //Need to add a logout button - logic is that AsyncStorage is cleared\r\n    //and renavigated to the Welcome page\r\n    _logout = async () => {\r\n        await AsyncStorage.clear();\r\n        navigation.navigate.Auth;\r\n    } \r\n\r\n    return ( \r\n        <View style={styles.container}>  \r\n            <Image style={styles.backgroundImage} source={require('../images/TraceBio-White.png')}></Image>    \r\n            <Text style={styles.title}>LOGIN</Text>\r\n            <TextInput \r\n                placeholder='Username' \r\n                style={styles.inputFields}\r\n                onChangeText={(uname) => setUsername(uname)}\r\n                value={username}></TextInput> \r\n            <TextInput \r\n                placeholder='Password' \r\n                style={styles.inputFields} \r\n                secureTextEntry\r\n                onChangeText={(pass) => setPassword(pass)}\r\n                value={password}></TextInput>        \r\n            <TouchableOpacity style={styles.button} onPress={_login}>\r\n                <Text style={styles.buttonText} >LOGIN</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n};\r\n\r\n//All styling options created below\r\nconst styles= StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor:'#b7b7b7'\r\n      },\r\n    backgroundImage:{\r\n        alignSelf:'center',\r\n        marginTop:30,\r\n        marginBottom:70,\r\n        width: '60%',\r\n        height: 100,\r\n        resizeMode: \"stretch\"              \r\n      },\r\n    inputFields:{\r\n        backgroundColor: '#FFFFFF',\r\n        marginHorizontal: '10%',\r\n        marginVertical: 10,\r\n        padding:10,\r\n        fontWeight: 'bold',\r\n        opacity: .4,\r\n        borderRadius:3\r\n    },\r\n    title:{\r\n        alignSelf:'center',\r\n        marginHorizontal: '10%',\r\n        marginVertical: 10,\r\n        color:'#202020',\r\n        fontWeight:'bold',\r\n        fontSize: 30\r\n        },\r\n    button:{\r\n        //alignSelf: 'center',\r\n        //width: '60%',\r\n        alignItems: 'center',\r\n        marginHorizontal: '10%',\r\n        marginVertical: 10,\r\n        padding:10,\r\n        borderRadius:20,\r\n        backgroundColor:'#ff0000',            \r\n    },\r\n    buttonText:{\r\n        color: '#FFFFFF',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}