{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Brianna\\\\Documents\\\\GitHub\\\\traceapp-wsu\\\\src\\\\screens\\\\DrawerMenu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport DeprecatedViewPropTypes from 'react-native/Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes';\nimport { NavigationEvents } from 'react-navigation';\nvar options = [{\n  name: \"Home\",\n  icon: \"ios-home\",\n  screenName: \"HomeScreen\",\n  key: 1\n}, {\n  name: \"Profile\",\n  icon: \"md-contact\",\n  screenName: \"ProfileScreen\",\n  key: 2\n}, {\n  name: \"Settings\",\n  icon: \"ios-settings\",\n  screenName: \"SettingsScreen\",\n  key: 3\n}];\n\nvar DrawerMenu = function (_Component) {\n  _inherits(DrawerMenu, _Component);\n\n  var _super = _createSuper(DrawerMenu);\n\n  function DrawerMenu() {\n    _classCallCheck(this, DrawerMenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawerMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: StyleSheet.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: options,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(NavItem, {\n            navigation: _this.props.navigation,\n            name: item.name,\n            icon: item.icon,\n            screenName: item.screenName,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.key;\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DrawerMenu;\n}(Component);\n\n;\n\nvar NavItem = function NavItem(_ref2) {\n  var navigation = _ref2.navigation,\n      name = _ref2.name,\n      icon = _ref2.icon,\n      screenName = _ref2.screenName;\n  return React.createElement(TouchableOpacity, {\n    style: styles.OptionsItem,\n    onPress: function onPress() {\n      return navigation.navigate('${screenName}', {\n        isStatusBarHidden: false\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.OptionsItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, name));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  OptionsItem: {\n    height: 60,\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  OptionsItemText: {\n    fontSize: 20,\n    margin: 10,\n    fontWeight: 'bold',\n    paddingHorizontal: 25\n  }\n});\nexport default DrawerMenu;","map":{"version":3,"sources":["C:/Users/Brianna/Documents/GitHub/traceapp-wsu/src/screens/DrawerMenu.js"],"names":["React","Component","Ionicons","DeprecatedViewPropTypes","NavigationEvents","options","name","icon","screenName","key","DrawerMenu","StyleSheet","container","item","props","navigation","index","NavItem","styles","OptionsItem","navigate","isStatusBarHidden","OptionsItemText","create","flex","height","alignItems","flexDirection","fontSize","margin","fontWeight","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {View, Text, StyleSheet, TouchableOpacity, Image, FlatList, InteractionManager} from 'react-native';\r\nimport DeprecatedViewPropTypes from 'react-native/Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes';\r\nimport { NavigationEvents } from 'react-navigation';\r\n\r\n\r\nconst options = [\r\n    {\r\n        name: \"Home\",\r\n        icon: \"ios-home\",\r\n        screenName: \"HomeScreen\",\r\n        key: 1\r\n    },\r\n    {\r\n        name: \"Profile\",\r\n        icon: \"md-contact\",\r\n        screenName: \"ProfileScreen\",\r\n        key: 2\r\n    },\r\n    {\r\n        name: \"Settings\",\r\n        icon: \"ios-settings\",\r\n        screenName: \"SettingsScreen\",\r\n        key: 3\r\n    }\r\n];\r\n\r\nclass DrawerMenu extends Component {\r\n    render() {\r\n        return(\r\n            <View style={StyleSheet.container}>\r\n                <FlatList\r\n                data={options}\r\n                renderItem={({item})=> (\r\n                    <NavItem\r\n                    navigation={this.props.navigation}\r\n                    name={item.name}\r\n                    icon={item.icon}\r\n                    screenName={item.screenName}\r\n                    keyExtractor={(item,index)=>index.key}\r\n                    />\r\n                )}\r\n                    />\r\n            </View>\r\n        );\r\n    }\r\n};\r\n\r\nconst NavItem =({navigation, name, icon, screenName})=>{\r\n    return(\r\n        <TouchableOpacity style={styles.OptionsItem} onPress={()=>navigation.navigate('${screenName}',{isStatusBarHidden: false})}>\r\n        <Ionicons name={icon} size={32}/>\r\n        <Text style={styles.OptionsItemText}>{name}</Text>\r\n    </TouchableOpacity>\r\n    )\r\n};\r\n\r\nconst styles= StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n      },\r\n   OptionsItem:{\r\n       height:60,\r\n       alignItems:\"center\",\r\n       flexDirection: \"row\"\r\n   },\r\n   OptionsItemText:{\r\n       fontSize: 20,\r\n       margin: 10,\r\n       fontWeight: 'bold',\r\n       paddingHorizontal: 25\r\n       \r\n   }\r\n\r\n});\r\n\r\nexport default DrawerMenu;\r\n\r\n"]},"metadata":{},"sourceType":"module"}